#!/bin/bash

printf "${NORMAL}\n [ START ] Update & Upgrade"
starttime=$(date +%s)
trap '' 2
sudo apt -y upgrade && sudo apt -y dist-upgrade
trap 2
endtime=$(date +%s)
printf " [ DONE ] Update & Upgrade ... %s seconds\n" "$((endtime - starttime))"
printf "\n [ START ] Installing common requirements"
starttime=$(date +%s)
apps=(
    software-properties-common
    build-essential
    apt-transport-https
    git
    curl
    unzip
    libssl-dev
    ca-certificates
)
trap '' 2
sudo apt -y install "${apps[@]}"
trap 2
unset apps
endtime=$(date +%s)
printf " [ DONE ] common requirements ... %s seconds\n" "$((endtime - starttime))"

printf "\n\n Install PHP"
printf "\n ------------------"
printf "\n Install PHP? (y/n) "
read -p 'Answer: '  reply

if [[ $reply =~ ^[Yy]$ ]]
then
    sudo apt install software-properties-common -y
    sudo add-apt-repository ppa:ondrej/php -y
    sudo apt update -y
    sudo apt install php7.3 -y
    sudo apt install php7.3-common php7.3-bcmath php7.3-mysql php7.3-xml php7.3-xmlrpc php7.3-curl php7.3-gd php7.3-imagick php7.3-cli php7.3-dev php7.3-imap php7.3-mbstring php7.3-opcache php7.3-soap php7.3-zip php7.3-intl -y
    php -v
fi

# Install python
echo 'Install Phython & PIP'
echo '-----------------'
sudo apt install python-minimal -y
sudo apt install python-pip -y
python --version
pip --version

# Install zsh
echo 'Install oh-my-zsh'
echo '-----------------'
sudo apt install zsh -y
sudo chsh -s /usr/bin/zsh
sudo rm -rf ~/.oh-my-zsh
curl -L https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh

# Install powerlevel9k
echo 'Install Powerlevel 10K'
echo '-----------------'
git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/.oh-my-zsh/custom/themes/powerlevel10k

# Install Powerline-Symbols
echo 'Install Powerline-Symbols'
echo '-----------------'
sudo apt-get install fontconfig -y
wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf
wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf
mkdir -p  ~/.local/share/fonts/
mkdir -p ~/.config/fontconfig/conf.d/
mv PowerlineSymbols.otf ~/.local/share/fonts/
sudo fc-cache -vf ~/.local/share/fonts/
mv 10-powerline-symbols.conf ~/.config/fontconfig/conf.d/

# Install zsh-autosuggestions
echo 'Install zsh-autosuggestions'
echo '-----------------'
git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

# Install zsh-syntax-highlighting
echo 'Install zsh-syntax-highlighting'
echo '-----------------'
git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting

# Install Mackup
echo 'Install Mackup'
echo '-----------------'
pip install --upgrade mackup

if [ "$wslnum" == "1"]
then
# Install Docker
echo 'Install Docker'
echo '-----------------'
sudo apt-get update -y
sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt-get update -y
sudo apt-get install -y docker-ce
sudo usermod -aG docker $USER
fi

# Symlink zsh prefs
rm ~/.zshrc
if [ "$wslnum" == "1"]
then
ln -s ~/.dotfiles/shell/.wsl1 ~/.zshrc
else
ln -s ~/.dotfiles/shell/.wsl2 ~/.zshrc
fi

# Symlink yarn prefs
rm ~/.yarnrc
ln -s ~/.dotfiles/shell/.yarnrc ~/.yarnrc

# Symlink warp prefs
rm ~/.warprc
ln -s ~/.dotfiles/shell/.warprc ~/.warprc

# Copy the Mackup config
rm ~/.mackup.cfg
cp ~/.dotfiles/macros/.mackup.cfg ~/.mackup.cfg

#Copy WSL config
sudo cp ~/.dotfiles/shell/wsl.conf /etc/wsl.conf

echo 'Install composer'
echo '----------------'
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
php -r "if (hash_file('sha384', 'composer-setup.php') === 'a5c698ffe4b8e849a443b120cd5ba38043260d5c4023dbf93e1558871f1f07f58274fc6f4c93bcfd858c6bd0775cd8d1') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
php composer-setup.php
php -r "unlink('composer-setup.php');"
sudo mv composer.phar /usr/local/bin/composer

echo 'Install node.js'
echo '----------------'
sudo apt-get update -y
sudo apt -y install curl dirmngr apt-transport-https lsb-release ca-certificates
curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
sudo apt install nodejs -y
nodejs -v

echo 'Install yarn'
echo '----------------'
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
sudo apt update
sudo apt install yarn
yarn --version

printf "\n Config personal things (Y/n): "
read -r personalconfig
if [ -z "${personalconfig}" ] || [ "${personalconfig}" == Y ] || [ "${personalconfig}" == y ]; then
    printf "\n Your Name (Default: Stephan Jess): "
    read -r username
    if [ -z "${username}" ]; then
        username="Stephan Jess"
        echo "$username"
    fi
    git config --global user.name "${username}"

    printf "\n Your E-Mail (Default: s.jess@novagraphix.de): "
    read -r email
    if [ -z "${email}" ]; then
        email="s.jess@novagraphix.de"
        echo "$email"
    fi
    git config --global user.email "${email}"

    if [ ! -d ~/.ssh ]; then
        ssh-keygen -t rsa -b 4096 -C "${email}"
    fi
fi
printf "\n SSH-Key generated in ~/.ssh\n"

printf "\n [ START ] Cleaning"
starttime=$(date +%s)
trap '' 2
sudo apt -y autoremove && sudo apt -y autoclean && sudo apt -y clean
trap 2
endtime=$(date +%s)
printf " [ DONE ] Cleaning ... %s seconds\n" "$((endtime - starttime))"
endtotaltime=$(date +%s)
printf "\n Total Execution Time ... %s seconds\n" "$((endtotaltime - starttotaltime))\n"

# Change Shell
chsh -s $(which zsh)
zsh
source ~/.zshrc

echo "${GREEN}++++++++++++++++++++++++++++++"
echo '++++++++++++++++++++++++++++++'
echo 'All done! Restart Console!'
echo 'Things to do to make the terminal theme work:'
echo "${RED}1. Install (Windows) FiraCode patched font included in ~/.dotfiles/misc${GREEN}"
echo '++++++++++++++++++++++++++++++'
echo 'Some optional tidbits'
echo "${RED}1. Make a .dotfiles-custom/shell/.aliases for your personal commands${GREEN}"
echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
